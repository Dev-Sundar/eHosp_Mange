CREATE DATABASE EHealthCare;
USE  EHealthCare;

CREATE TABLE Patient (
    patientId INT AUTO_INCREMENT PRIMARY KEY,
    patientName VARCHAR(50) NOT NULL,
    age INT NOT NULL,
    gender VARCHAR(10) NOT NULL,
    contactNumber VARCHAR(15) NOT NULL,
    address VARCHAR(255) NOT NULL,
    emergencyContact VARCHAR(50) NOT NULL,
    medicalHistory TEXT,
    currentMedications TEXT,
    insuranceProvider VARCHAR(50),
    insurancePolicy VARCHAR(50)
);
CREATE TABLE Doctor (
    doctorId INT AUTO_INCREMENT PRIMARY KEY,
    doctorName VARCHAR(50) NOT NULL,
    specialization VARCHAR(255) NOT NULL, -- Storing as a single string, can be processed as array if needed
    contactNumber VARCHAR(15) NOT NULL,
    email VARCHAR(50) NOT NULL,
    yearsOfExperience INT NOT NULL,
    medicalLicenseNumber VARCHAR(50) NOT NULL,
    qualifications VARCHAR(255) NOT NULL -- Storing as a single string, can be processed as array if needed
);

CREATE TABLE Hospital (
    hospitalId INT AUTO_INCREMENT PRIMARY KEY,
    hospitalname VARCHAR(50) NOT NULL,
    hospitalLocation VARCHAR(100) NOT NULL,
    contactNumber VARCHAR(15) NOT NULL,
    email VARCHAR(50) NOT NULL,
    numberOfBeds INT NOT NULL,
    specialities TEXT NOT NULL,
    insuranceAccepted TEXT,
    hospitalType VARCHAR(50) NOT NULL
);
 
 CREATE TABLE Appointment (
    appointmentId INT AUTO_INCREMENT PRIMARY KEY,
    patientId INT NOT NULL,
    doctorId INT NOT NULL,
    department VARCHAR(50) NOT NULL,
    appointmentDate DATE NOT NULL,
    appointmentTime TIME NOT NULL,
    reasonForAppointment TEXT NOT NULL,
    confirmation BOOLEAN NOT NULL,
    FOREIGN KEY (patientId) REFERENCES Patient(patientId),
    FOREIGN KEY (doctorId) REFERENCES Doctor(doctorId)
);

ALTER TABLE Doctor
CHANGE qualifications qualification VARCHAR(255) NOT NULL;

ALTER TABLE Patient
CHANGE currentMedications currentMedication TEXT;

ALTER TABLE Appointment
DROP COLUMN department;

USE EHealthCare;
CREATE TABLE Feedback (
    feedbackId INT AUTO_INCREMENT PRIMARY KEY,
    doctorId INT NOT NULL,
    patientName VARCHAR(50) NOT NULL,
    rating INT NOT NULL,
    comments TEXT,
    FOREIGN KEY (doctorId) REFERENCES Doctor(doctorId)
);
